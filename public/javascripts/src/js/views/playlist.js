// Generated by CoffeeScript 1.4.0
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(["jquery", "backbone", "templates/playlist"], function($, Backbone, playlistTemplate) {
    var PlaylistView;
    return PlaylistView = (function(_super) {

      __extends(PlaylistView, _super);

      function PlaylistView() {
        return PlaylistView.__super__.constructor.apply(this, arguments);
      }

      PlaylistView.prototype.tagName = "li";

      PlaylistView.prototype.events = {
        "click .icon-trash": "delete",
        "click .icon-edit": "edit",
        "keypress input.title": "update"
      };

      PlaylistView.prototype.initialize = function() {
        return this.model.on("destroy", this.removeView, this);
      };

      PlaylistView.prototype.render = function() {
        var renderedContent;
        renderedContent = playlistTemplate['playlist.hbs']({
          title: this.model.get('title')
        });
        this.$el.html(renderedContent);
        return this;
      };

      PlaylistView.prototype["delete"] = function(evt) {
        return this.model.destroy();
      };

      PlaylistView.prototype.removeView = function() {
        return this.remove();
      };

      PlaylistView.prototype.edit = function() {
        this.inputEdit = this.$('input.title').show();
        return this.spanEdit = this.$('span.title').hide();
      };

      PlaylistView.prototype.update = function(evt) {
        var newTitle;
        if (evt.which !== 13) {
          return;
        }
        newTitle = this.inputEdit.val();
        if ($.trim(newTitle) !== "") {
          this.spanEdit.text(newTitle);
          this.model.set('title', newTitle);
          this.model.save();
        }
        this.inputEdit.hide();
        return this.spanEdit.show();
      };

      return PlaylistView;

    })(Backbone.View);
  });

}).call(this);
