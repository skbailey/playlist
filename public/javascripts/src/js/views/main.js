// Generated by CoffeeScript 1.4.0
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(["jquery", "underscore", "backbone", "collections/playlists"], function($, _, Backbone, PlaylistCollection) {
    var MainView;
    return MainView = (function(_super) {

      __extends(MainView, _super);

      function MainView() {
        return MainView.__super__.constructor.apply(this, arguments);
      }

      MainView.prototype.el = "#container";

      MainView.prototype.events = {
        "click .create-playlist": "showCreatePlaylistForm",
        "submit #playlist-creator form": "createPlaylist"
      };

      MainView.prototype.initialize = function() {
        this.collection = new PlaylistCollection;
        return this.collection.on("invalid", this.showPlaylistSaveError, this);
      };

      MainView.prototype.showCreatePlaylistForm = function(evt) {
        var _ref;
        if ((_ref = this.createPlaylistForm) == null) {
          this.createPlaylistForm = this.$("#playlist-creator form");
        }
        return this.createPlaylistForm.addClass("show");
      };

      MainView.prototype.createPlaylist = function(evt) {
        var input;
        evt.preventDefault();
        input = $(evt.target).find('input');
        return this.collection.create({
          title: input.val()
        });
      };

      MainView.prototype.showPlaylistSaveError = function(model, error) {
        return alert(error);
      };

      return MainView;

    })(Backbone.View);
  });

}).call(this);
